From stable-bounces@linux.kernel.org Thu Feb  9 02:04:21 2006
Message-Id: <200602091003.k19A3frh008321@shell0.pdx.osdl.net>
To: kamezawa.hiroyu@jp.fujitsu.com, hugh@veritas.com, manfred@colorfullife.com,
        stable@kernel.org, mm-commits@vger.kernel.org
From: akpm@osdl.org
Date: Thu, 09 Feb 2006 02:03:17 -0800
Cc: 
Subject: shmdt cannot detach not-alined shm segment cleanly.


From: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>

sys_shmdt() can manage shm segments which are covered by multiple vmas.  (This
can happen when a user uses mprotect() after shmat().)

This works well if shm is aligned to PAGE_SIZE, but if not, the last
segment cannot be detached.  It is because a comparison in sys_shmdt()

	(vma->vm_end - addr) < size
		addr == return address of shmat()
		size == shmsize, argments to shmget()

size should be aligned to PAGE_SIZE before being compared with vma->vm_end,
which is aligned.

Signed-off-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>
Cc: Manfred Spraul <manfred@colorfullife.com>
Cc: Hugh Dickins <hugh@veritas.com>
Cc: <stable@kernel.org>
Signed-off-by: Andrew Morton <akpm@osdl.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
---
 ipc/shm.c |    1 +
 1 file changed, 1 insertion(+)

--- linux-2.6.15.3.orig/ipc/shm.c
+++ linux-2.6.15.3/ipc/shm.c
@@ -863,6 +863,7 @@ asmlinkage long sys_shmdt(char __user *s
 	 * could possibly have landed at. Also cast things to loff_t to
 	 * prevent overflows and make comparisions vs. equal-width types.
 	 */
+	size = PAGE_ALIGN(size);
 	while (vma && (loff_t)(vma->vm_end - addr) <= size) {
 		next = vma->vm_next;
 
