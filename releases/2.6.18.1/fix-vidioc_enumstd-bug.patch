From stable-bounces@linux.kernel.org Mon Sep 25 16:27:59 2006
Message-Id: <200609252325.k8PNPbRC002109@shell0.pdx.osdl.net>
To: torvalds@osdl.org
From: Jonathan Corbet <corbet-v4l@lwn.net>
Date: Mon, 25 Sep 2006 16:25:37 -0700
Cc: akpm@osdl.org, mchehab@infradead.org, stable@kernel.org,
        corbet-v4l@lwn.net, corbet@lwn.net
Subject: Fix VIDIOC_ENUMSTD bug

From: Jonathan Corbet <corbet-v4l@lwn.net>

The v4l2 API documentation for VIDIOC_ENUMSTD says:

	To enumerate all standards applications shall begin at index
	zero, incrementing by one until the driver returns EINVAL.

The actual code, however, tests the index this way:

               if (index<=0 || index >= vfd->tvnormsize) {
                        ret=-EINVAL;

So any application which passes in index=0 gets EINVAL right off the bat
- and, in fact, this is what happens to mplayer.  So I think the
following patch is called for, and maybe even appropriate for a 2.6.18.x
stable release.

Signed-off-by: Jonathan Corbet <corbet@lwn.net>
Cc: Mauro Carvalho Chehab <mchehab@infradead.org>
Signed-off-by: Andrew Morton <akpm@osdl.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>


---
 drivers/media/video/videodev.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- linux-2.6.18.orig/drivers/media/video/videodev.c
+++ linux-2.6.18/drivers/media/video/videodev.c
@@ -836,7 +836,7 @@ static int __video_do_ioctl(struct inode
 			break;
 		}
 
-		if (index<=0 || index >= vfd->tvnormsize) {
+		if (index < 0 || index >= vfd->tvnormsize) {
 			ret=-EINVAL;
 			break;
 		}
