From mtosatti@redhat.com  Tue Feb 15 10:54:21 2011
From: Joerg Roedel <joerg.roedel@amd.com>
Date: Fri, 14 Jan 2011 10:10:19 -0200
Subject: KVM: MMU: Fix 32 bit legacy paging with NPT
To: greg@kroah.com, avi@redhat.com, mtosatti@redhat.com, stable@kernel.org
Cc: Joerg Roedel <joerg.roedel@amd.com>
Message-ID: <20110114121048.359036117@amt.cnet>

From: Joerg Roedel <joerg.roedel@amd.com>

commit f87f928882d080eaec8b0d76aecff003d664697d upstream.

This patch fixes 32 bit legacy paging with NPT enabled. The
mmu_check_root call on the top-level of the loop causes
root_gfn to take values (in the tdp_enabled path) which are
outside of guest memory. So the mmu_check_root call fails at
some point in the loop interation causing the guest to
tiple-fault.
This patch changes the mmu_check_root calls to the places
where they are really necessary. As a side-effect it
introduces a check for the root of a pae page table too.

Signed-off-by: Joerg Roedel <joerg.roedel@amd.com>
Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 arch/x86/kvm/mmu.c |    8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

--- a/arch/x86/kvm/mmu.c
+++ b/arch/x86/kvm/mmu.c
@@ -2254,6 +2254,10 @@ static int mmu_alloc_roots(struct kvm_vc
 		return 0;
 	}
 	direct = !is_paging(vcpu);
+
+	if (mmu_check_root(vcpu, root_gfn))
+		return 1;
+
 	for (i = 0; i < 4; ++i) {
 		hpa_t root = vcpu->arch.mmu.pae_root[i];
 
@@ -2265,10 +2269,10 @@ static int mmu_alloc_roots(struct kvm_vc
 				continue;
 			}
 			root_gfn = pdptr >> PAGE_SHIFT;
+			if (mmu_check_root(vcpu, root_gfn))
+				return 1;
 		} else if (vcpu->arch.mmu.root_level == 0)
 			root_gfn = 0;
-		if (mmu_check_root(vcpu, root_gfn))
-			return 1;
 		if (tdp_enabled) {
 			direct = 1;
 			root_gfn = i << (30 - PAGE_SHIFT);
