From jslaby@suse.cz  Mon Apr  1 16:37:40 2013
From: Jiri Slaby <jslaby@suse.cz>
Date: Tue, 19 Mar 2013 12:36:57 +0100
Subject: KVM: Fix buffer overflow in kvm_set_irq()
To: gregkh@linuxfoundation.org
Cc: jirislaby@gmail.com, stable@vger.kernel.org, Avi Kivity <avi@redhat.com>, Jiri Slaby <jslaby@suse.cz>
Message-ID: <1363693019-14812-12-git-send-email-jslaby@suse.cz>


From: Avi Kivity <avi@redhat.com>

commit f2ebd422f71cda9c791f76f85d2ca102ae34a1ed upstream.

kvm_set_irq() has an internal buffer of three irq routing entries, allowing
connecting a GSI to three IRQ chips or on MSI.  However setup_routing_entry()
does not properly enforce this, allowing three irqchip routes followed by
an MSI route to overflow the buffer.

Fix by ensuring that an MSI entry is added to an empty list.

Signed-off-by: Avi Kivity <avi@redhat.com>
Signed-off-by: Jiri Slaby <jslaby@suse.cz>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 virt/kvm/irq_comm.c |    1 +
 1 file changed, 1 insertion(+)

--- a/virt/kvm/irq_comm.c
+++ b/virt/kvm/irq_comm.c
@@ -318,6 +318,7 @@ static int setup_routing_entry(struct kv
 	 */
 	hlist_for_each_entry(ei, n, &rt->map[ue->gsi], link)
 		if (ei->type == KVM_IRQ_ROUTING_MSI ||
+		    ue->type == KVM_IRQ_ROUTING_MSI ||
 		    ue->u.irqchip.irqchip == ei->irqchip.irqchip)
 			return r;
 
