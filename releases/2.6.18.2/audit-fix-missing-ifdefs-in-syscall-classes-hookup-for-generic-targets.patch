From stable-bounces@linux.kernel.org Sun Oct 29 04:05:46 2006
Date: Sun, 29 Oct 2006 13:03:49 +0100
From: Al Viro <viro@ftp.linux.org.uk>
To: stable@kernel.org
Message-ID: <20061029120349.GA7012@deprecation.cyrius.com>
MIME-Version: 1.0
Content-Disposition: inline
Subject: Audit: fix missing ifdefs in syscall classes hookup for generic targets
Content-Type: text/plain; charset="us-ascii"

From: Al Viro <viro@ftp.linux.org.uk>

[PATCH] fix missing ifdefs in syscall classes hookup for generic targets

several targets have no ....at() family and m32r calls its only chown variant
chown32(), with __NR_chown being undefined.  creat(2) is also absent in some
targets.

Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
Signed-off-by: Linus Torvalds <torvalds@osdl.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>

---
 include/asm-generic/audit_change_attr.h |    4 ++++
 include/asm-generic/audit_dir_write.h   |    4 ++++
 lib/audit.c                             |    2 ++
 3 files changed, 10 insertions(+)

--- linux-2.6.18.1.orig/include/asm-generic/audit_change_attr.h
+++ linux-2.6.18.1/include/asm-generic/audit_change_attr.h
@@ -1,16 +1,20 @@
 __NR_chmod,
 __NR_fchmod,
+#ifdef __NR_chown
 __NR_chown,
 __NR_fchown,
 __NR_lchown,
+#endif
 __NR_setxattr,
 __NR_lsetxattr,
 __NR_fsetxattr,
 __NR_removexattr,
 __NR_lremovexattr,
 __NR_fremovexattr,
+#ifdef __NR_fchownat
 __NR_fchownat,
 __NR_fchmodat,
+#endif
 #ifdef __NR_chown32
 __NR_chown32,
 __NR_fchown32,
--- linux-2.6.18.1.orig/include/asm-generic/audit_dir_write.h
+++ linux-2.6.18.1/include/asm-generic/audit_dir_write.h
@@ -1,14 +1,18 @@
 __NR_rename,
 __NR_mkdir,
 __NR_rmdir,
+#ifdef __NR_creat
 __NR_creat,
+#endif
 __NR_link,
 __NR_unlink,
 __NR_symlink,
 __NR_mknod,
+#ifdef __NR_mkdirat
 __NR_mkdirat,
 __NR_mknodat,
 __NR_unlinkat,
 __NR_renameat,
 __NR_linkat,
 __NR_symlinkat,
+#endif
--- linux-2.6.18.1.orig/lib/audit.c
+++ linux-2.6.18.1/lib/audit.c
@@ -28,8 +28,10 @@ int audit_classify_syscall(int abi, unsi
 	switch(syscall) {
 	case __NR_open:
 		return 2;
+#ifdef __NR_openat
 	case __NR_openat:
 		return 3;
+#endif
 #ifdef __NR_socketcall
 	case __NR_socketcall:
 		return 4;
