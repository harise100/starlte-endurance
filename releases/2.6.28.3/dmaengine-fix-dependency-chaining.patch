From yur@emcraft.com  Fri Jan 30 17:40:59 2009
From: Yuri Tikhonov <yur@emcraft.com>
Date: Thu, 29 Jan 2009 15:37:13 +0300
Subject: dmaengine: fix dependency chaining
To: Greg KH <greg@kroah.com>
Cc: stable@kernel.org, Dan Williams <dan.j.williams@intel.com>, wd@denx.de
Message-ID: <200901291537.13536.yur@emcraft.com>
Content-Disposition: inline

From: Yuri Tikhonov <yur@emcraft.com>

commit dd59b8537f6cb53ab863fafad86a5828f1e889a2 upstream


 ASYNC_TX: fix dependency chaining

 In ASYNC_TX we track the dependencies between the descriptors
using the 'next' pointers of the structures. These pointers are
set to NULL as soon as the corresponding descriptor has been
submitted to the channel (in async_tx_run_dependencies()).
 But, the first 'next' in chain still remains set, regardless
the fact, that tx->next is already submitted. This may lead to
multiple submisions of the same descriptor. This patch fixes this.

Signed-off-by: Yuri Tikhonov <yur@emcraft.com>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 crypto/async_tx/async_tx.c |    2 ++
 1 file changed, 2 insertions(+)

--- a/crypto/async_tx/async_tx.c
+++ b/crypto/async_tx/async_tx.c
@@ -124,6 +124,8 @@ void async_tx_run_dependencies(struct dm
 	if (!dep)
 		return;
 
+	/* we'll submit tx->next now, so clear the link */
+	tx->next = NULL;
 	chan = dep->chan;
 
 	/* keep submitting up until a channel switch is detected
