From stable-bounces@linux.kernel.org  Thu Mar 20 16:11:35 2008
Date: Wed, 19 Mar 2008 04:40:04 GMT
Message-Id: <200803190440.m2J4e4Bk023448@hera.kernel.org>
From: jejb@kernel.org
To: jejb@kernel.org, stable@kernel.org
Subject: async_tx: avoid the async xor_zero_sum path when src_cnt > device->max_xor

From: Dan Williams <dan.j.williams@intel.com>
commit: 8d8002f642886ae256a3c5d70fe8aff4faf3631a

If the channel cannot perform the operation in one call to
->device_prep_dma_zero_sum, then fallback to the xor+page_is_zero path.
This only affects users with arrays larger than 16 devices on iop13xx or
32 devices on iop3xx.

Cc: <stable@kernel.org>
Cc: Neil Brown <neilb@suse.de>
Signed-off-by: Dan Williams <dan.j.williams@intel.com>
[chrisw@sous-sol.org: backport to 2.6.24.3]
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>
---
please verify the backport makes sense

 crypto/async_tx/async_xor.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/crypto/async_tx/async_xor.c
+++ b/crypto/async_tx/async_xor.c
@@ -264,7 +264,7 @@ async_xor_zero_sum(struct page *dest, st
 
 	BUG_ON(src_cnt <= 1);
 
-	if (tx) {
+	if (tx && src_cnt <= device->max_xor) {
 		dma_addr_t dma_addr;
 		enum dma_data_direction dir;
 
