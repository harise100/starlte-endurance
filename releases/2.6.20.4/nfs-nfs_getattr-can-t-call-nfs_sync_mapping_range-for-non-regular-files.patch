From stable-bounces@linux.kernel.org Fri Mar 16 14:40:29 2007
From: Trond Myklebust <trond.myklebust@fys.uio.no>
Date: Fri, 16 Mar 2007 13:38:28 -0800
Subject: nfs: nfs_getattr() can't call nfs_sync_mapping_range() for non-regular files
To: torvalds@linux-foundation.org
Cc: olof@lixom.net, akpm@linux-foundation.org, Trond.Myklebust@netapp.com, stable@kernel.org, trond.myklebust@fys.uio.no
Message-ID: <200703162138.l2GLcSBK022391@shell0.pdx.osdl.net>


From: Trond Myklebust <trond.myklebust@fys.uio.no>

Looks like we need a check in nfs_getattr() for a regular file. It makes
no sense to call nfs_sync_mapping_range() on anything else. I think that
should fix your problem: it will stop the NFS client from interfering
with dirty pages on that inode's mapping.

Signed-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>
Acked-by: Olof Johansson <olof@lixom.net>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 fs/nfs/inode.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

--- a/fs/nfs/inode.c
+++ b/fs/nfs/inode.c
@@ -422,7 +422,8 @@ int nfs_getattr(struct vfsmount *mnt, st
 	int err;
 
 	/* Flush out writes to the server in order to update c/mtime */
-	nfs_sync_mapping_range(inode->i_mapping, 0, 0, FLUSH_NOCOMMIT);
+	if (S_ISREG(inode->i_mode))
+		nfs_sync_mapping_range(inode->i_mapping, 0, 0, FLUSH_NOCOMMIT);
 
 	/*
 	 * We may force a getattr if the user cares about atime.
