From stable-bounces@linux.kernel.org  Fri Apr 17 22:42:03 2009
From: mtosatti@redhat.com
To: chrisw@redhat.com
Date: Fri, 17 Apr 2009 19:40:13 -0300
Message-Id: <1240008013-4635-8-git-send-email-mtosatti@redhat.com>
Cc: Amit Shah <amit.shah@redhat.com>, stable@kernel.org, Avi Kivity <avi@redhat.com>
Subject: KVM: is_long_mode() should check for EFER.LMA

From: Amit Shah <amit.shah@qumranet.com>

upstream commit: 41d6af119206e98764b4ae6d264d63acefcf851e

is_long_mode currently checks the LongModeEnable bit in
EFER instead of the LongModeActive bit. This is wrong, but
we survived this till now since it wasn't triggered. This
breaks guests that go from long mode to compatibility mode.

This is noticed on a solaris guest and fixes bug #1842160

Signed-off-by: Amit Shah <amit.shah@qumranet.com>
Signed-off-by: Avi Kivity <avi@qumranet.com>
Signed-off-by: Chris Wright <chrisw@sous-sol.org>
---
 arch/x86/kvm/mmu.h |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/x86/kvm/mmu.h
+++ b/arch/x86/kvm/mmu.h
@@ -54,7 +54,7 @@ static inline int kvm_mmu_reload(struct 
 static inline int is_long_mode(struct kvm_vcpu *vcpu)
 {
 #ifdef CONFIG_X86_64
-	return vcpu->arch.shadow_efer & EFER_LME;
+	return vcpu->arch.shadow_efer & EFER_LMA;
 #else
 	return 0;
 #endif
