From mark.fasheh@oracle.com  Tue Aug 21 14:11:52 2007
From: Mark Fasheh <mark.fasheh@oracle.com>
Date: Thu, 16 Aug 2007 17:16:04 -0700
Subject: ocfs2: Fix bad source start calculation during kernel writes
To: stable@kernel.org
Message-ID: <20070817001604.GI5260@ca-server1.us.oracle.com>
Content-Disposition: inline


From: Mark Fasheh <mark.fasheh@oracle.com>

[PATCH] ocfs2: Fix bad source start calculation during kernel writes

For in-kernel writes ocfs2_get_write_source() should be starting the buffer
at a page boundary as the math in ocfs2_map_and_write_user_data() will pad
it back out to the correct write offset. Instead, we were passing the raw
offset, which caused ocfs2_map_and_write_user_data() start too far into the
buffer, resulting in corruptions from nfs client writes.

Signed-off-by: Mark Fasheh <mark.fasheh@oracle.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 fs/ocfs2/file.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/fs/ocfs2/file.c
+++ b/fs/ocfs2/file.c
@@ -1353,7 +1353,7 @@ static struct page * ocfs2_get_write_sou
 		else
 			src_page = ERR_PTR(-EFAULT);
 	} else {
-		bp->b_src_buf = buf;
+		bp->b_src_buf = (char *)((unsigned long)buf & PAGE_CACHE_MASK);
 	}
 
 	return src_page;
