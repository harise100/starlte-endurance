From patchwork Tue Apr 21 14:30:41 2015
Content-Type: text/plain; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Subject: sparc: Use GFP_ATOMIC in ldc_alloc_exp_dring() as it can be called in
 softirq context
From: Sowmini Varadhan <sowmini.varadhan@oracle.com>
X-Patchwork-Id: 463148
Message-Id: <1429626641-199974-1-git-send-email-sowmini.varadhan@oracle.com>
To: sowmini.varadhan@oracle.com, sparclinux@vger.kernel.org
Cc: david.stevens@oracle.com, davem@davemloft.net
Date: Tue, 21 Apr 2015 10:30:41 -0400

From: Sowmini Varadhan <sowmini.varadhan@oracle.com>

Upstream commit 671d773297969bebb1732e1cdc1ec03aa53c6be2

Since it is possible for vnet_event_napi to end up doing
vnet_control_pkt_engine -> ... -> vnet_send_attr ->
vnet_port_alloc_tx_ring -> ldc_alloc_exp_dring -> kzalloc()
(i.e., in softirq context), kzalloc() should be called with
GFP_ATOMIC from ldc_alloc_exp_dring.

Signed-off-by: Sowmini Varadhan <sowmini.varadhan@oracle.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 arch/sparc/kernel/ldc.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/arch/sparc/kernel/ldc.c
+++ b/arch/sparc/kernel/ldc.c
@@ -2307,7 +2307,7 @@ void *ldc_alloc_exp_dring(struct ldc_cha
 	if (len & (8UL - 1))
 		return ERR_PTR(-EINVAL);
 
-	buf = kzalloc(len, GFP_KERNEL);
+	buf = kzalloc(len, GFP_ATOMIC);
 	if (!buf)
 		return ERR_PTR(-ENOMEM);
 
