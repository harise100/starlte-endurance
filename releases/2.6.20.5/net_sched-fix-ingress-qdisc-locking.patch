From stable-bounces@linux.kernel.org Mon Mar 26 18:16:55 2007
From: Patrick McHardy <kaber@trash.net>
Date: Mon, 26 Mar 2007 18:15:37 -0700 (PDT)
Subject: NET_SCHED: Fix ingress qdisc locking.
To: stable@kernel.org
Cc: bunk@stusta.de
Message-ID: <20070326.181537.59655672.davem@davemloft.net>

From: Patrick McHardy <kaber@trash.net>

[NET_SCHED]: Fix ingress locking

Ingress queueing uses a seperate lock for serializing enqueue operations,
but fails to properly protect itself against concurrent changes to the
qdisc tree. Use queue_lock for now since the real fix it quite intrusive.

Signed-off-by: Patrick McHardy <kaber@trash.net>
Signed-off-by: David S. Miller <davem@davemloft.net>

---
 net/core/dev.c |    4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -1750,10 +1750,10 @@ static int ing_filter(struct sk_buff *sk
 
 		skb->tc_verd = SET_TC_AT(skb->tc_verd,AT_INGRESS);
 
-		spin_lock(&dev->ingress_lock);
+		spin_lock(&dev->queue_lock);
 		if ((q = dev->qdisc_ingress) != NULL)
 			result = q->enqueue(skb, q);
-		spin_unlock(&dev->ingress_lock);
+		spin_unlock(&dev->queue_lock);
 
 	}
 
