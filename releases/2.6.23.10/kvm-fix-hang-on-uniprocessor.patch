From stable-bounces@linux.kernel.org Sun Dec  2 03:18:56 2007
From: Marko Kohtala <marko.kohtala@gmail.com>
Date: Sun,  2 Dec 2007 13:18:43 +0200
Subject: KVM: Fix hang on uniprocessor
To: stable@kernel.org
Cc: kvm-devel@lists.sourceforge.net, Marko Kohtala <marko.kohtala@gmail.com>, linux-kernel@vger.kernel.org, Avi Kivity <avi@qumranet.com>
Message-ID: <1196594327723-git-send-email-avi@qumranet.com>


From: Marko Kohtala <marko.kohtala@gmail.com>

This is not in mainline, as it was fixed differently in that tree.

first_cpu(cpus) returns the only CPU when NR_CPUS is 1 regardless of
the cpus mask. Therefore we avoid a kernel hang in
KVM_SET_MEMORY_REGION ioctl on uniprocessor by not entering the loop at
all.

Signed-off-by: Marko Kohtala <marko.kohtala@gmail.com>
Signed-off-by: Avi Kivity <avi@qumranet.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/kvm/kvm_main.c |    5 +++++
 1 file changed, 5 insertions(+)

--- a/drivers/kvm/kvm_main.c
+++ b/drivers/kvm/kvm_main.c
@@ -273,6 +273,11 @@ void kvm_flush_remote_tlbs(struct kvm *k
 			}
 	}
 
+	/* Uniprocessor kernel does not respect cpus in first_cpu. So
+	 * do not go there if we have nothing to do. */
+	if (cpus_empty(cpus))
+		return;
+
 	/*
 	 * We really want smp_call_function_mask() here.  But that's not
 	 * available, so ipi all cpus in parallel and wait for them
