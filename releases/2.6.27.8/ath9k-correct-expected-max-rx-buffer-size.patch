From lrodriguez@Atheros.com  Tue Dec  2 16:09:29 2008
From: "Luis R. Rodriguez" <lrodriguez@Atheros.com>
Date: Tue, 2 Dec 2008 12:51:21 -0800
Subject: ath9k: correct expected max RX buffer size
To: <stable@kernel.org>
Cc: <sfr@canb.auug.org.au>, <ath9k-devel@venema.h4ckr.net>, "Luis R. Rodriguez" <lrodriguez@Atheros.com>, Bennyam Malavazi <Bennyam.Malavazi@Atheros.com>
Message-ID: <1228251082-11677-3-git-send-email-lrodriguez@atheros.com>

From: Luis R. Rodriguez <lrodriguez@atheros.com>

commit b4b6cda2298b0c9a0af902312184b775b8867c65 upstream

We should only tell the hardware its capable of DMA'ing
to us only what we asked dev_alloc_skb(). Prior to this
it is possible a large RX'd frame could have corrupted
DMA data but for us but we were saved only because we
were previously also pci_map_single()'ing the same large
value. The issue prior to this though was we were unmapping
a smaller amount which the prior DMA patch fixed.

Signed-off-by: Bennyam Malavazi <Bennyam.Malavazi@atheros.com>
Signed-off-by: Luis R. Rodriguez <lrodriguez@atheros.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@suse.de>

---
 drivers/net/wireless/ath9k/recv.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/drivers/net/wireless/ath9k/recv.c
+++ b/drivers/net/wireless/ath9k/recv.c
@@ -52,7 +52,7 @@ static void ath_rx_buf_link(struct ath_s
 	/* setup rx descriptors */
 	ath9k_hw_setuprxdesc(ah,
 			     ds,
-			     skb_tailroom(skb),   /* buffer size */
+			     sc->sc_rxbufsize,
 			     0);
 
 	if (sc->sc_rxlink == NULL)
